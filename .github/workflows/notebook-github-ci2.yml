name: Notebook CI v2

on: workflow_dispatch

jobs:
  test-lib-job:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Environment / Context
      run: |
        env | sort
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
    - name: Run Unit tests
      run: |
        pytest common/tests --cov

  deploy-lib-job:
    needs: test-lib-job
    runs-on: ubuntu-latest
    environment: DEV

    steps:
    - uses: actions/checkout@v3
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -e .
    - name: Build wheel package
      run: |
        python setup.py bdist_wheel --universal
    - name: Create Library Artifact
      uses: actions/upload-artifact@v3
      with:
        name: libs
        path: dist
    - name: Setup  databricks-cli
      run: |
        python -m pip install --upgrade pip
        pip install databricks-cli
    - name: Upload libs to Databricks
      run: |
        echo "Uploading libs at ./dist to workspace dbfs:/lib-dist ..."
        databricks fs mkdirs dbfs:/lib-dist
        databricks fs cp "./dist" dbfs:/lib-dist --recursive --overwrite
      env:
        DATABRICKS_HOST: ${{ secrets.databricksDomain }}
        DATABRICKS_TOKEN: ${{ secrets.databricksToken }}
    - name: Install libs in Databricks
      run: |
        echo "Installing libs dbfs:/lib-dist ..."
        for file in `databricks fs ls dbfs:/lib-dist --absolute`
        do
            extension="${file##*.}"
            if [ $extension = "whl" ]
            then
                echo "Installing libs $file ..."
                databricks libraries install --cluster-id $CLUSTER --whl $file
            fi
        done
      env:
        DATABRICKS_HOST: ${{ secrets.databricksDomain }}
        DATABRICKS_TOKEN: ${{ secrets.databricksToken }}
        CLUSTER: ${{ secrets.databricksClusterId }}

  deploy-notebooks-job:
    needs: deploy-lib-job
    runs-on: ubuntu-latest
    environment: DEV

    steps:
    - uses: actions/checkout@v3
    - name: setup python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"
        architecture: "x64"
    - name: Setup  databricks-cli
      run: |
        python -m pip install --upgrade pip
        pip install databricks-cli
    - name: Deploy notebooks
      run: |
        echo "Uploading notebooks at ./notebook_jobs to workspace /Shared/notebook-tests/dbxbuild_$(Build.BuildId)/ ..."
        databricks workspace import_dir --overwrite "./notebook_jobs" "/Shared/notebook-tests/dbxbuild_$(Build.BuildId)/"
      env:
        DATABRICKS_HOST: ${{ secrets.databricksDomain }}
        DATABRICKS_TOKEN: ${{ secrets.databricksToken }}
        DATABRICKS_NOTEBOOK_PATH: ${{ secrets.databricksNotebookPath }}